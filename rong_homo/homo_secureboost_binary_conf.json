{
    "initiator": {
        "role": "guest",
        "party_id": 9999
    },
    "job_parameters": {
        "work_mode": 1,
        "processors_per_node": 1
    },
    "role": {
        "guest": [9999],
        "host": [10000],
        "arbiter": [10000]
    },
    "role_parameters": {
        "guest": {
            "args": {
                "data": {
                    "train_data": [{"name": "rong_guest", "namespace": "homo"}],
                    "eval_data": [{"name": "rong_test", "namespace": "homo"}]
                }
            },
            "dataio_0":{
                "with_label": [true],
                "label_name": ["y"],
                "label_type": ["int"],
                "output_format": ["dense"]
            },
            "feature_scale_0": {
                "method": ["standard_scale"]
            },
            "feature_scale_1": {
                "method": ["standard_scale"]
            }
        },
        "host": {
            "args": {
                "data": {
                    "train_data": [{"name": "rong_host", "namespace": "homo"}],
                    "eval_data": [{"name": "rong_test", "namespace": "homo"}]
                }
            },
            "dataio_0":{
                "with_label": [true],
                "label_name": ["y"],
                "label_type": ["int"],
                "output_format": ["dense"]
            },
            "feature_scale_0": {
                "method": ["standard_scale"]
            },
            "feature_scale_1": {
                "method": ["standard_scale"]
            }
        }
    },
    "algorithm_parameters": {
        "secureboost_0": {
            "task_type": "classification",
            "learning_rate": 0.01,
            "num_trees": 3,
            "subsample_feature_rate": 0.6,
            "n_iter_no_change": false,
            "tol": 0.0001,
            "bin_num": 50,
            "validation_freqs": 1,
            "tree_param": {
                "max_depth": 3
            },
            "objective_param": {
                "objective": "cross_entropy"
            },
            "encrypt_param":{
                "method": "IterativeAffine"
            },
            "predict_param": {
                "with_proba": true,
                "threshold": 0.5
            },
            "cv_param": {
                "n_splits": 5,
                "shuffle": false,
                "random_seed": 103,
                "need_cv": false
             }
        },
        "evaluation_0": {
            "eval_type": "binary"
        },
        "evaluation_1": {
            "eval_type": "binary"
        }
    }
}